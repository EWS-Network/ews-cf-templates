---
AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  A sample template with an Instance + ebs disks + use ephemeral for swap
  Author: John "Preston" Mille
  License: GPLv3

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: >-
      Name of the KeyPair to use for the AutoScaling Group
  ImageId:
    Type: AWS::EC2::Image::Id
    Default: ami-9398d3e0

  ApplicationName:
    Type: String
    Default: "Test"

  AZ:
    Type: "AWS::EC2::AvailabilityZone::Name"
    Default: "eu-west-1a"
    AllowedValues:
      - "eu-west-1a"
      - "eu-west-1b"
      - "eu-west-1c"

  NTPServer:
    Type: String
    Default: "0.europe.pool.ntp.org"
  VPCName:
    Type: String
    AllowedValues:
    - "Prod"
    - "Dev"
    Default: "Dev"

  InstanceType:
    Type: String
    Default: m3.large
    AllowedValues:
      # c3 have 2 ephemeral
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      # m3 medium / large have only 1
      - m3.medium
      - m3.large
      # other m3 have 2
      - m3.xlarge
      - m3.2xlarge
      # x1 have 1 and 2 respectively
      - x1.16xlarge
      - x1.32xlarge
      # r3 have 1
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      # has 2
      - r3.8xlarge

Conditions:
  has1ephemeral:
    Fn::Or:
      - Fn::Equals:
          - !Ref InstanceType
          - "r3.large"
      - Fn::Equals:
          - !Ref InstanceType
          - "r3.xlarge"
      - Fn::Equals:
          - !Ref InstanceType
          - "r3.2xlarge"
      - Fn::Equals:
          - !Ref InstanceType
          - "r3.4xlarge"
      - Fn::Equals:
          - !Ref InstanceType
          - "x1.16xlarge"
      - Fn::Equals:
          - !Ref InstanceType
          - "m3.medium"
      - Fn::Equals:
          - !Ref InstanceType
          - "m3.large"


Resources:
  ec2Test:
    Type: "AWS::EC2::Instance"
    Metadata:
      AWS::CloudFormation::Init:
        packagesInstall:
          packages:
            yum:
              lvm2: []
              parted: []
              xfsprogs: []
        partition:
          commands:
            0001-part-disk1:
              command: "while true ; do if [ `fdisk -l | grep xvdz | wc -l` -gt 0 ]; then parted -a optimal -s -- /dev/xvdz mklabel msdos mkpart primary 0% 100%; exit 0;  fi ; done"
            0002-part-disk2:
              command: "while true ; do if [ `fdisk -l | grep xvdx | wc -l` -gt 0 ]; then parted -a optimal -s -- /dev/xvdx mklabel msdos mkpart primary 0% 100%; exit 0;  fi ; done"
            0003-set-lvm-flag:
              command: "parted -s -- /dev/xvdz set 1 lvm on ; parted -s -- /dev/xvdx set 1 lvm on"
        lvmconfig:
          commands:
            0001-pv-disk1:
              command: "pvcreate /dev/xvdz1"
            0002-pv-disk2:
              command: "pvcreate /dev/xvdx1"
            0003-vgcreate-vg01:
              command: "vgcreate vg01 /dev/xvdz1 /dev/xvdx1"
            0004-lvcreate-data:
              command: "lvcreate vg01 -n data -l50%FREE -i 2 -I64"
        format:
          commands:
            0001-format-data:
              command: "mkfs.xfs -f /dev/mapper/vg01-data"
        paths:
          commands:
            0001-create-data-dir:
              command: "mkdir -p /var/lib/data"
              test: "if ! [ -d /var/lib/data ]; then exit 0; else exit 1; fi"
        mount:
          commands:
            0001-add-data-to-fstab:
              command: "echo /dev/mapper/vg01-data /var/lib/data xfs defaults 0 0 >> /etc/fstab"
            0002-mount-all:
              command: "mount -a"

        swapScript:
          files:
            "/var/tmp/swapOn.sh":
              owner: root
              group: root
              mode: 755
              content:
                Fn::Join:
                  - "\n"
                  - - "#!/usr/bin/env bash"
                    - "# Script to put disk / partition to swap pool"
                    - ""
                    - "if ! [ \"$#\" -eq 1 ]; then"
                    - " echo No disk specified"
                    - " exit 1"
                    - "fi"
                    - ""
                    - "while true ; do"
                    - " if [ `fdisk -l | grep $1 | wc -l` -gt 0 ]; then"
                    - "   parted -a optimal -s -- /dev/$1 mklabel gpt mkpart primary 0% 100%;"
                    - "   break"
                    - " fi"
                    - "done"
                    - ""
                    - "function turnOnSwap"
                    - "{"
                    - "mkswap /dev/\"$1\"1"
                    - "swapon /dev/\"$1\"1"
                    - "}"
                    - ""
                    - "echo Swapping on !"
                    - "turnOnSwap $1 && exit 0 || echo failed to turn on swap for $1 && exit 1"
                    - ""
                    - ""


        swapOnSdb:
          commands:
            0001-partition-sdb:
              command: "/bin/bash /var/tmp/swapOn.sh xvdb"
              ignoreErrors: True

        swapOnSdc:
          commands:
            0001-partition-sdc:
              command: "/bin/bash /var/tmp/swapOn.sh xvdc"
              ignoreErrors: True

        configSets:
          classicLvm:
            - packagesInstall
            - partition
            - lvmconfig
            - format
            - paths
            - mount
          ephemeralSwapOn:
            - swapScript
            - swapOnSdb
            - Fn::If:
                - has1ephemeral
                - !Ref AWS::NoValue
                - swapOnSdc
          default:
            - ConfigSet: ephemeralSwapOn
            - ConfigSet: classicLvm

    Properties:
      EbsOptimized: False
      BlockDeviceMappings:
        Fn::If:
          - has1ephemeral
          - - DeviceName: "/dev/sdb"
              VirtualName: "ephemeral0"
          - - DeviceName: "/dev/sdb"
              VirtualName: "ephemeral0"
            - DeviceName: "/dev/sdc"
              VirtualName: "ephemeral1"
      KeyName: !Ref KeyName
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      Volumes:
        - VolumeId: !Ref ebsDisk1
          Device: /dev/xvdz
        - VolumeId: !Ref ebsDisk2
          Device: /dev/xvdx
      AvailabilityZone: !Ref AZ
      UserData:
        Fn::Base64:
          Fn::Join:
          - "\n"
          - - "#!/bin/env bash"
            - ""
            - Fn::Join:
                - " "
                - - "ntpdate -u"
                  - !Ref NTPServer
            - ""
            - "export PATH=$PATH:/opt/aws/bin:/usr/local/bin"
            - "# Script to initialize the resource with CloudFormaton init tools"
            - "function success_exit"
            - "{"
            - " echo Successfully initialized the resource"
            - " echo Signaling CloudFormation"
            - Fn::Join:
                - " "
                - - " /opt/aws/bin/cfn-signal -e 0 -r \"$1\""
                  - Fn::Join:
                      - "'"
                      - - ""
                        - !Ref WHInstanceInit
                        - ""
            - ""
            - " exit 1"
            - "}"
            - ""
            - "function error_exit"
            - "{"
            - " echo Failure at initializing the resource"
            - " echo Signaling CloudFormation"
            - Fn::Join:
                - " "
                - - " /opt/aws/bin/cfn-signal -e 1 -r \"$1\""
                  - Fn::Join:
                      - "'"
                      - - ""
                        - !Ref WHInstanceInit
                        - ""
            - ""
            - " exit 1"
            - "}"
            - ""
            - Fn::Join:
                - " "
                - - "/opt/aws/bin/cfn-init --stack"
                  - !Ref AWS::StackName
                  - " -r ec2Test"
                  - " --region"
                  - !Ref AWS::Region
                  - "&& success_exit \"Resource successfully initlaized\""
                  - "|| error_exit \"Failed to initialize the resource\""
            - ""

  ebsDisk1:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - !GetAZs
      AutoEnableIO: False
      Encrypted: False
      Size: 10
      Tags:
        - Key: Name
          Value: Disk1
        - Key: Usage
          Value: Demo
      VolumeType: standard

  ebsDisk2:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - !GetAZs
      AutoEnableIO: False
      Encrypted: False
      Size: 10
      Tags:
        - Key: Name
          Value: Disk2
        - Key: Usage
          Value: Demo
      VolumeType: standard


  WHInstanceInit:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  WCInstanceInit:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref WHInstanceInit
      Timeout: "1800"


Outputs:
  Instance:
    Description: >-
      Instance ID
    Value: !Ref ec2Test
  Disk1:
    Description: >-
      Disk 1 ID
    Value: !Ref ebsDisk1
  Disk2:
    Description: >-
      Disk2 ID
    Value: !Ref ebsDisk2
